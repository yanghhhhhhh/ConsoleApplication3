Method 1:
Run the following command on Remote Linux machine/WSL:

Install using the repository
Before you install Docker Engine for the first time on a new host machine, you need to set up the Docker repository. Afterward, you can install and update Docker from the repository.

Set up the repository

	1. Update the apt package index and install packages to allow apt to use a repository over HTTPS:
	
	sudo apt-get update
	sudo apt-get install \
	    ca-certificates \
	    curl \
	    gnupg \
	    lsb-release

	2. Add Docker’s official GPG key:

	sudo mkdir -p /etc/apt/keyrings
	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

	3. Use the following command to set up the repository:

	echo \
	  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
	  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
	

Install Docker Engine

	1. Install Docker Engine

	sudo apt-get update

	2. Install Docker Engine, containerd, and Docker Compose.

	sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

	3. Verify that the Docker Engine installation is successful by running the hello-world image:
	
	sudo docker run hello-world


Install node.js

This feature requires node version 14+.
 
 
	curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - &&\
sudo apt-get install -y nodejs
 
https://github.com/nodesource/distributions/blob/master/README.md#using-ubuntu-4


Issue:
If Docker is running in Linux, but appear the following issue:


Workaround:
[Solved] Got permission denied while trying to connect to the docker daemon socket (linuxhandbook.com):

Run the following command:

sudo groupadd docker
sudo usermod -aG docker $USER
groups
newgrp docker


docker rm -f $(docker ps -a -q)

命令 docker rm -f $(docker ps -a -q) 用于强制删除系统上的所有 Docker 容器。



docker system prune -a



命令 docker system prune -a 用于通过删除所有未使用的数据来清理 Docker 系统。
